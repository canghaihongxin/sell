Starting PushMessageServiceImplTest on 01HL2IXBWRWCH9B with PID 7664 (started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6b0d80ed: startup date [Fri Dec 01 13:26:18 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serverEndpointExporter' defined in class path resource [com/budongfeng/sell/config/WebSocketConfig.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available
Closing JPA EntityManagerFactory for persistence unit 'default'


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting PushMessageServiceImplTest on 01HL2IXBWRWCH9B with PID 7040 (started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@77659b30: startup date [Fri Dec 01 13:29:11 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serverEndpointExporter' defined in class path resource [com/budongfeng/sell/config/WebSocketConfig.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available
Closing JPA EntityManagerFactory for persistence unit 'default'


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting PushMessageServiceImplTest on 01HL2IXBWRWCH9B with PID 2104 (started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@35a3d49f: startup date [Fri Dec 01 13:30:30 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serverEndpointExporter' defined in class path resource [com/budongfeng/sell/config/WebSocketConfig.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available
Closing JPA EntityManagerFactory for persistence unit 'default'


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting PushMessageServiceImplTest on 01HL2IXBWRWCH9B with PID 7920 (started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@35a3d49f: startup date [Fri Dec 01 13:31:59 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'buyerOrderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'webSocket'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'okhttp3.WebSocket' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting SellApplication on 01HL2IXBWRWCH9B with PID 12836 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53fd0d10: startup date [Fri Dec 01 13:33:52 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3795 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53fd0d10: startup date [Fri Dec 01 13:33:52 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.63 seconds (JVM running for 13.666)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信网页授权】 获取code，result=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxe2878eec582f3dee&redirect_uri=http%3A%2F%2Fbudongfeng.tunnel.qydev.com%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_base&state=http%3A%2F%2Fsell.com%2F%23%2F#wechat_redirect
【微信网页授权】 获取code，result=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxe2878eec582f3dee&redirect_uri=http%3A%2F%2Fbudongfeng.tunnel.qydev.com%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_base&state=http%3A%2F%2Fsell.com%2F%23%2F#wechat_redirect
Starting SellApplication on 01HL2IXBWRWCH9B with PID 12176 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 13:47:59 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2420 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 13:47:59 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 7.855 seconds (JVM running for 8.974)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15121074354092935184",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512107438",
  "nonceStr": "S1vODvpvFlizeE41",
  "packAge": "prepay_id\u003dwx201712011351531239c19d940972108584",
  "signType": "MD5",
  "paySign": "A18F95676DE9BCE3ABEA6FB784B617D5"
}
【微信支付】 异常通知  payResponse={
  "orderAmount": 0.01,
  "orderId": "15121074354092935184",
  "outTradeNo": "4200000046201712018260951969"
}
Starting SellApplication on 01HL2IXBWRWCH9B with PID 12960 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5dcb4f5f: startup date [Fri Dec 01 13:52:17 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2405 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5dcb4f5f: startup date [Fri Dec 01 13:52:17 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 7.683 seconds (JVM running for 8.609)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15121076686007241324",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512107675",
  "nonceStr": "fGEJLjPpUncWJcEj",
  "packAge": "prepay_id\u003dwx201712011355506fe37fa8320295492284",
  "signType": "MD5",
  "paySign": "116C3772EC2853928E5D78A7C50C1C70"
}
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15121076798531304096",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512107681",
  "nonceStr": "w8vklSSDU4Y5HzCA",
  "packAge": "prepay_id\u003dwx20171201135557623c4572170835981848",
  "signType": "MD5",
  "paySign": "FAD57BDAFF52C86DA6103809998A9BC1"
}
【微信支付】 异常通知  payResponse={
  "orderAmount": 0.01,
  "orderId": "15121076798531304096",
  "outTradeNo": "4200000043201712018258115769"
}
Starting SellApplication on 01HL2IXBWRWCH9B with PID 12820 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71812481: startup date [Fri Dec 01 14:04:44 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2429 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71812481: startup date [Fri Dec 01 14:04:44 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 8.196 seconds (JVM running for 9.081)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15121085375827498104",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512108548",
  "nonceStr": "s9kwCMJqrF5vpOnH",
  "packAge": "prepay_id\u003dwx20171201141023fc631e752f0252762104",
  "signType": "MD5",
  "paySign": "B31E325F7829392607E091377221C2B8"
}
【微信支付】 异常通知  payResponse={
  "orderAmount": 0.01,
  "orderId": "15121085375827498104",
  "outTradeNo": "4200000039201712018263383787"
}
微信发送消息
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15121086358206888760",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512108637",
  "nonceStr": "fkCzxGVZN52mTDhe",
  "packAge": "prepay_id\u003dwx201712011411525727e37a220977659146",
  "signType": "MD5",
  "paySign": "84D4EF0122FB3061B175FB39F29EFA88"
}
【微信支付】 异常通知  payResponse={
  "orderAmount": 0.01,
  "orderId": "15121086358206888760",
  "outTradeNo": "4200000037201712018262078658"
}
微信发送消息
Starting SellApplication on 01HL2IXBWRWCH9B with PID 7312 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7b84fcf8: startup date [Fri Dec 01 19:04:50 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 7436 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$84337f18.CGLIB$jpaVendorAdapter$3(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$84337f18$$FastClassBySpringCGLIB$$d4952510.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$84337f18.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.budongfeng.sell.SellApplication.main(SellApplication.java:14)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 61 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 62 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 85 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000342: Could not obtain connection to query metadata : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
Stopping service [Tomcat]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting SellApplication on 01HL2IXBWRWCH9B with PID 4812 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 19:25:10 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2382 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Starting SellApplication on 01HL2IXBWRWCH9B with PID 844 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33b1c5c5: startup date [Fri Dec 01 19:26:27 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2302 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$46878e76.CGLIB$jpaVendorAdapter$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$46878e76$$FastClassBySpringCGLIB$$a79df28b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$46878e76.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.budongfeng.sell.SellApplication.main(SellApplication.java:14)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 61 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 62 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 85 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000342: Could not obtain connection to query metadata : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
Stopping service [Tomcat]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting SellApplication on 01HL2IXBWRWCH9B with PID 4916 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33b1c5c5: startup date [Fri Dec 01 19:28:23 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2173 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33b1c5c5: startup date [Fri Dec 01 19:28:23 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.219 seconds (JVM running for 15.989)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
Starting SellApplication on 01HL2IXBWRWCH9B with PID 6828 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b202a3a: startup date [Fri Dec 01 19:32:52 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2158 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b202a3a: startup date [Fri Dec 01 19:32:52 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 6.811 seconds (JVM running for 7.636)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
HHH000397: Using ASTQueryTranslatorFactory
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
Starting SellApplication on 01HL2IXBWRWCH9B with PID 10200 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16ce702d: startup date [Fri Dec 01 19:50:16 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2134 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16ce702d: startup date [Fri Dec 01 19:50:16 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 6.746 seconds (JVM running for 7.58)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 5100 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:36:37 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4471 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:36:37 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.508 seconds (JVM running for 15.031)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 3672 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:38:07 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4202 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:38:07 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.268 seconds (JVM running for 15.572)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 7388 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:40:48 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4188 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:40:48 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.93 seconds (JVM running for 14.328)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 9236 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:42:54 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4038 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:42:54 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.995 seconds (JVM running for 14.703)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 124 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 8428 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fde5d22: startup date [Fri Dec 01 20:45:04 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4229 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fde5d22: startup date [Fri Dec 01 20:45:04 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.012 seconds (JVM running for 14.42)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 7060 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:52:11 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4302 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 20:52:11 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.319 seconds (JVM running for 14.755)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 157 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 1028 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 21:24:19 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4102 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44b3606b: startup date [Fri Dec 01 21:24:19 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList(java.lang.String)
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.963 seconds (JVM running for 14.42)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 80 ms
HHH000397: Using ASTQueryTranslatorFactory
