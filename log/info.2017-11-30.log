Starting SellApplication on 01HL2IXBWRWCH9B with PID 7000 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@32193bea: startup date [Thu Nov 30 09:42:34 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 10837 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@32193bea: startup date [Thu Nov 30 09:42:34 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 37.867 seconds (JVM running for 43.143)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
HHH000397: Using ASTQueryTranslatorFactory
【AOP控制用户访问】COOKIE中找不到token
Starting SellApplication on 01HL2IXBWRWCH9B with PID 2396 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:47:26 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3591 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:47:26 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.124 seconds (JVM running for 14.617)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 100 ms
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
Starting SellApplication on 01HL2IXBWRWCH9B with PID 8084 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:49:38 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4144 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:49:38 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.086 seconds (JVM running for 15.102)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 103 ms
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
Starting SellApplication on 01HL2IXBWRWCH9B with PID 3928 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:51:55 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4108 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Starting SellApplication on 01HL2IXBWRWCH9B with PID 8264 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:52:10 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3948 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:52:10 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.807 seconds (JVM running for 14.175)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 145 ms
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
Starting SellApplication on 01HL2IXBWRWCH9B with PID 3596 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:54:54 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3565 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69653e16: startup date [Thu Nov 30 09:54:54 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.571 seconds (JVM running for 15.236)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
Starting SellApplication on 01HL2IXBWRWCH9B with PID 6868 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 12:44:11 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5073 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 12:44:11 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Stopping service [Tomcat]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 12:44:11 CST 2017]; root of context hierarchy
Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 12:44:11 CST 2017]; root of context hierarchy
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:427)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:999)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.budongfeng.sell.SellApplication.main(SellApplication.java:10)
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting SellApplication on 01HL2IXBWRWCH9B with PID 11160 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 12:53:12 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4117 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 12:53:12 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.133 seconds (JVM running for 14.908)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 199 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
Starting SellApplication on 01HL2IXBWRWCH9B with PID 13432 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:49:39 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3781 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:49:39 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.483 seconds (JVM running for 14.898)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 175 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 14068 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:52:15 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3750 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:52:15 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.6 seconds (JVM running for 17.046)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 80 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数：1
Starting SellApplication on 01HL2IXBWRWCH9B with PID 10560 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:57:19 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3885 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:57:19 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.143 seconds (JVM running for 15.644)
Starting SellApplication on 01HL2IXBWRWCH9B with PID 14244 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:58:44 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3780 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:58:44 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.535 seconds (JVM running for 14.946)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on 01HL2IXBWRWCH9B with PID 12484 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:59:27 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4011 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 13:59:27 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.753 seconds (JVM running for 14.362)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 121 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数：1
【微信网页授权】 获取code，result=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxe2878eec582f3dee&redirect_uri=http%3A%2F%2Fbudongfeng.tunnel.qydev.com%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_base&state=http%3A%2F%2Fsell.com%2F%23%2F#wechat_redirect
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120237361546751812",
  "orderAmount": 10.2,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512023741",
  "nonceStr": "autVn1dxNGT0oOFp",
  "packAge": "prepay_id\u003dwx201711301436548ae890a49c0972873350",
  "signType": "MD5",
  "paySign": "2F04B386CDA6F7980E69242BC56EDA30"
}
Starting SellApplication on 01HL2IXBWRWCH9B with PID 5672 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 14:36:38 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3886 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 14:36:38 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.237 seconds (JVM running for 15.641)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数：1
【websocket消息】，广播消息,message=15120239745395674270
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120239745395674270",
  "orderAmount": 20.5,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512023977",
  "nonceStr": "hzSbsBZdnBiPuKFC",
  "packAge": "prepay_id\u003dwx20171130144051c2cb3b578e0592029201",
  "signType": "MD5",
  "paySign": "1D9DBBAEA6386A53B485D30FE7334604"
}
Starting SellApplication on 01HL2IXBWRWCH9B with PID 11576 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 14:52:43 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4000 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 14:52:43 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.395 seconds (JVM running for 15.255)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 135 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120248619903675475",
  "orderAmount": 30.5,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512024865",
  "nonceStr": "DAbuuSxVsbK31jbe",
  "packAge": "prepay_id\u003dwx2017113014553949faa292590547641456",
  "signType": "MD5",
  "paySign": "62B42FCD1A94D4A0EF75D534078881E4"
}
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
【websocket消息】 有新的连接，总数：1
【websocket消息】，广播消息,message=15120249994614866071
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120249994614866071",
  "orderAmount": 30.5,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512025001",
  "nonceStr": "VVPJhSBu3N9LelzO",
  "packAge": "prepay_id\u003dwx20171130145755cbfb8042500336314232",
  "signType": "MD5",
  "paySign": "A243B574E796968E33506A3AE02332D7"
}
【websocket消息】 有新的连接，总数：2
【websocket消息】连接断开，总数:1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】 有新的连接，总数：2
【websocket消息】连接断开，总数:1
【websocket消息】 有新的连接，总数：2
【websocket消息】连接断开，总数:1
【websocket消息】 有新的连接，总数：2
【websocket消息】连接断开，总数:1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】，广播消息,message=15120255563745824459
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120255563745824459",
  "orderAmount": 10.2,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512025557",
  "nonceStr": "1LIFeTjPZWeHSNeP",
  "packAge": "prepay_id\u003dwx20171130150712e40dc306820093507670",
  "signType": "MD5",
  "paySign": "01BC8FC540F0FD9863DB5436BB698562"
}
【websocket消息】 有新的连接，总数：2
【websocket消息】连接断开，总数:1
【websocket消息】 有新的连接，总数：2
【websocket消息】连接断开，总数:1
【websocket消息】 有新的连接，总数：2
【websocket消息】连接断开，总数:1
【websocket消息】，广播消息,message=15120255968623303221
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120255968623303221",
  "orderAmount": 10.2,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512025597",
  "nonceStr": "svMbItuoUsayhxTn",
  "packAge": "prepay_id\u003dwx2017113015075138f4c140f70989713834",
  "signType": "MD5",
  "paySign": "E1E7AAE58545D8AECD06BC0007EA6AEE"
}
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】，广播消息,message=15120258083089378893
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120258083089378893",
  "orderAmount": 10.2,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512025809",
  "nonceStr": "QndnC2IWHoCAahgv",
  "packAge": "prepay_id\u003dwx20171130151123a0036cf1fc0154890224",
  "signType": "MD5",
  "paySign": "7C391BEE04B202FFCFE0E32C29E3F084"
}
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
Starting SellApplication on 01HL2IXBWRWCH9B with PID 8484 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 15:23:25 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3957 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 15:23:25 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.839 seconds (JVM running for 14.654)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 75 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数：1
【websocket消息】，广播消息,message=15120267969569788702
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120267969569788702",
  "orderAmount": 10.2,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512026799",
  "nonceStr": "6p9MHcToLSjYQbT3",
  "packAge": "prepay_id\u003dwx20171130152753d10d6ee2fa0932628754",
  "signType": "MD5",
  "paySign": "F51FD6C278DA9BBCFE2D7257CF38CA28"
}
【websocket消息】 有新的连接，总数：2
【websocket消息】连接断开，总数:1
【websocket消息】 有新的连接，总数：2
【websocket消息】，广播消息,message=15120269863542144315
【websocket消息】，广播消息,message=15120269863542144315
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120269863542144315",
  "orderAmount": 30.5,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512026987",
  "nonceStr": "wqJprXGYxI9yC7Fd",
  "packAge": "prepay_id\u003dwx201711301531028b4b70ce090627421385",
  "signType": "MD5",
  "paySign": "0C78958D94AF50437499A20A0AE5E989"
}
【websocket消息】连接断开，总数:1
【websocket消息】连接断开，总数:0
Starting SellApplication on 01HL2IXBWRWCH9B with PID 8188 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 17:34:38 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4559 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 17:34:38 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.541 seconds (JVM running for 20.073)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【AOP控制用户访问】COOKIE中找不到token
【异常拦截器】拦截用户登录异常
【websocket消息】 有新的连接，总数：2
【微信网页授权】 获取code，result=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxe2878eec582f3dee&redirect_uri=http%3A%2F%2Fbudongfeng.tunnel.qydev.com%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_base&state=http%3A%2F%2Fsell.com%2F%23%2F#wechat_redirect
【websocket消息】连接断开，总数:1
【websocket消息】 有新的连接，总数：2
【websocket消息】，广播消息,message=15120349221607354359
【websocket消息】，广播消息,message=15120349221607354359
【微信支付】 发起支付  request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "15120349221607354359",
  "orderAmount": 10.2,
  "orderName": "微信点餐订单",
  "openid": "o_LGFt2pj8eeXW1L6NAuGO9ioEFo"
}
【微信支付】 发起支付 response={
  "appId": "wxe2878eec582f3dee",
  "timeStamp": "1512034924",
  "nonceStr": "sYGduQ1B7sYs7isl",
  "packAge": "prepay_id\u003dwx201711301743189036f586cf0984641536",
  "signType": "MD5",
  "paySign": "8332DCA836BA0FAE83310B9B2AFAD35B"
}
【websocket消息】连接断开，总数:1
【websocket消息】连接断开，总数:0
【websocket消息】 有新的连接，总数：1
【websocket消息】连接断开，总数:0
Starting SellApplication on 01HL2IXBWRWCH9B with PID 11420 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 18:37:30 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3719 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 18:37:30 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.71 seconds (JVM running for 15.779)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
Starting SellApplication on 01HL2IXBWRWCH9B with PID 9000 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 19:13:17 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4018 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 19:13:17 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.096 seconds (JVM running for 14.742)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
Starting SellApplication on 01HL2IXBWRWCH9B with PID 2144 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 19:15:04 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3890 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 19:15:04 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.29 seconds (JVM running for 15.364)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
Starting SellApplication on 01HL2IXBWRWCH9B with PID 6472 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 19:20:33 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4368 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5fe1ce85: startup date [Thu Nov 30 19:20:33 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.437 seconds (JVM running for 14.915)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
Starting ProductCategoryMapperTest on 01HL2IXBWRWCH9B with PID 11956 (started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@81d9a72: startup date [Thu Nov 30 19:44:30 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
No MyBatis mapper was found in '[com.budongfeng.sell]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serverEndpointExporter' defined in class path resource [com/budongfeng/sell/config/WebSocketConfig.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available
Closing JPA EntityManagerFactory for persistence unit 'default'


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting ProductCategoryMapperTest on 01HL2IXBWRWCH9B with PID 13852 (started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@478db956: startup date [Thu Nov 30 19:46:40 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serverEndpointExporter' defined in class path resource [com/budongfeng/sell/config/WebSocketConfig.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available
Closing JPA EntityManagerFactory for persistence unit 'default'


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting ProductCategoryMapperTest on 01HL2IXBWRWCH9B with PID 9200 (started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@478db956: startup date [Thu Nov 30 19:47:26 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serverEndpointExporter' defined in class path resource [com/budongfeng/sell/config/WebSocketConfig.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available
Closing JPA EntityManagerFactory for persistence unit 'default'


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting SellApplication on 01HL2IXBWRWCH9B with PID 9612 (D:\myworkspace\sell\target\classes started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7b84fcf8: startup date [Thu Nov 30 19:50:15 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.23
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3838 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7b84fcf8: startup date [Thu Nov 30 19:50:15 CST 2017]; root of context hierarchy
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.List<com.budongfeng.sell.dto.OrderDTO>> com.budongfeng.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.budongfeng.sell.vo.ResultVo<com.budongfeng.sell.dto.OrderDTO> com.budongfeng.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.budongfeng.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> com.budongfeng.sell.controller.BuyerOrderController.creatOrder(com.budongfeng.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/product/list]}" onto public com.budongfeng.sell.vo.ResultVo com.budongfeng.sell.controller.BuyerProductController.productList()
Mapped "{[/seller/category/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.index(java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/category/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.list(org.springframework.ui.ModelMap)
Mapped "{[/seller/category/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.CategoryController.catSaveOrUpdate(com.budongfeng.sell.form.CategoryForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.cancel(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.detail(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerOrderController.finish(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/list]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/save],methods=[POST]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.save(com.budongfeng.sell.form.ProductForm,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/index],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.productAddOrUpdate(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.on_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerProductController.off_sale(java.lang.String,org.springframework.ui.ModelMap)
Mapped "{[/seller/doLogin],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.budongfeng.sell.controller.SellerUserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/logout],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.ui.ModelMap)
Mapped "{[/seller/login]}" onto public java.lang.String com.budongfeng.sell.controller.SellerUserController.loginPage(org.springframework.ui.ModelMap)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.quUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.qrauthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.budongfeng.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.budongfeng.sell.controller.WeiXinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.budongfeng.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.484 seconds (JVM running for 14.944)
Starting ProductCategoryMapperTest on 01HL2IXBWRWCH9B with PID 10372 (started by Administrator in D:\myworkspace\sell)
The following profiles are active: home
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@41a90fa8: startup date [Thu Nov 30 19:51:15 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.budongfeng.sell.repository.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serverEndpointExporter' defined in class path resource [com/budongfeng/sell/config/WebSocketConfig.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available
Closing JPA EntityManagerFactory for persistence unit 'default'


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
